AWSTemplateFormatVersion: "2010-09-09"
Description: Resources for Snow White

Parameters:
  SlackWebhook:
    Type: String
    Default: http://requestbin.fullcontact.com/1fgar2l1
  SlackChannel:
    Type: String
    Default: "#general"
  CfnStackName:
    Type: String
    Default: "snow-white"
  CfnQuietDocName:
    Type: String
    Default: "QuietSideKiqDocument"
  CfnWakeDocName:
    Type: String
    Default: "WakeSideKiqDocument"

Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/ecs/snow-white"

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    DependsOn: LogGroup
    Properties:
      Family: "snow-white"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 0.5GB
      ExecutionRoleArn: !Ref FargateExecutionRole
      TaskRoleArn: !Ref SnowWhiteECSTaskRole
      ContainerDefinitions:
        - Name: "snow-white"
          Image: "rewindio/snow-white"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: ecs
          Environment:
            -
              Name: "SLACK_WEBHOOK"
              Value: !Ref SlackWebhook
            -
              Name: "NOTIFY_SLACK_CHANNEL"
              Value: !Ref SlackChannel
            - 
              Name: "CFN_STACK_NAME"
              Value: !Ref CfnStackName
            - 
              Name: "QUIET_COMMAND_LOGICAL_NAME"
              Value: !Ref CfnQuietDocName
            - 
              Name: "WAKE_COMMAND_LOGICAL_NAME"
              Value: !Ref CfnWakeDocName
            -
              Name: "EB_ENV_NAME_PATTERN_STRING"
              Value: "workers"
 
  SnowWhiteECSTaskRole:
    Description: Allows Snow White to run SSM tasks to control Sidekiq workers
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - "ecs-tasks.amazonaws.com"
          Action:
            - sts:AssumeRole
      Path: /
      Policies:
        - 
          PolicyName: "Snow-White"
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Resource: "*"
                Action:
                  - "elasticbeanstalk:DescribeEnvironmentResources"
                  - "elasticloadbalancing:DescribeLoadBalancers"
                  - "elasticbeanstalk:DescribeEnvironments"
                  - "autoscaling:DescribeAutoScalingGroups"
                  - "cloudformation:DescribeStackResource"
                  - "ecs:DescribeTasks"
                  - "ssm:SendCommand"
                  - "ssm:ListCommandInvocations"
                  - "iam:ListUserTags"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"

  FargateExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'

  QuietSideKiqDocument:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content: 
        schemaVersion: "2.2"
        description: "Quiet Sidekiq Workers"
        parameters:
          executionTimeout:
            type: "String"
            default: "7200"
            description: "(Optional) The time in seconds for a command to be completed before\
              \ it is considered to have failed. Default is 3600 (1 hour). Maximum is 172800\
              \ (48 hours)."
            allowedPattern: "([1-9][0-9]{0,4})|(1[0-6][0-9]{4})|(17[0-1][0-9]{3})|(172[0-7][0-9]{2})|(172800)"
        mainSteps:
        -
          action: "aws:downloadContent"
          name: "downloadScripts"
          inputs:
            sourceType: "GitHub"
            sourceInfo: "{ \"owner\":\"rewindio\", \"repository\": \"snow-white\", \"path\"\ : \"ssm/quiet_sidekiq_workers.sh\" }"
            destinationPath: "/tmp"
        - precondition:
            StringEquals:
            - "platformType"
            - "Linux"
          action: "aws:runShellScript"
          name: "quiet_workers"
          inputs:
            runCommand:
            - "ls -l"
            - "chmod a+x /tmp/quiet_sidekiq_workers.sh"
            - "/tmp/quiet_sidekiq_workers.sh"
            workingDirectory: "/tmp"
            timeoutSeconds: "{{ executionTimeout }}"

  WakeSideKiqDocument:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content: 
        schemaVersion: "2.2"
        description: "Wake Sidekiq Workers"
        parameters:
          executionTimeout:
            type: "String"
            default: "7200"
            description: "(Optional) The time in seconds for a command to be completed before\
              \ it is considered to have failed. Default is 3600 (1 hour). Maximum is 172800\
              \ (48 hours)."
            allowedPattern: "([1-9][0-9]{0,4})|(1[0-6][0-9]{4})|(17[0-1][0-9]{3})|(172[0-7][0-9]{2})|(172800)"
        mainSteps:
        -
          action: "aws:downloadContent"
          name: "downloadScripts"
          inputs:
            sourceType: "GitHub"
            sourceInfo: "{ \"owner\":\"rewindio\", \"repository\": \"snow-white\", \"path\"\ : \"ssm/wake_sidekiq_workers.sh\" }"
            destinationPath: "/tmp"
        - precondition:
            StringEquals:
            - "platformType"
            - "Linux"
          action: "aws:runShellScript"
          name: "wake_workers"
          inputs:
            runCommand:
            - "ls -l"
            - "chmod a+x /tmp/wake_sidekiq_workers.sh"
            - "/tmp/wake_sidekiq_workers.sh"
            workingDirectory: "/tmp"
            timeoutSeconds: "{{ executionTimeout }}"